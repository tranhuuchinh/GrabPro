{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport styles from \"./AvartarScreen.style\";\nimport { useCustomFonts } from \"../../styles/fonts\";\nimport { faCircleUser, faMessage } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-native-fontawesome\";\nimport AccountScreen from \"./components/AccountScreen/AccountScreen\";\nimport MessageScreen from \"./components/MessageScreen/MessageScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar AvartarScreen = function AvartarScreen() {\n  var fontsLoaded = useCustomFonts();\n  var _useState = useState(1),\n    _useState2 = _slicedToArray(_useState, 2),\n    status = _useState2[0],\n    setStatus = _useState2[1];\n  if (!fontsLoaded) {\n    return null;\n  } else {\n    return _jsxs(View, {\n      style: styles.avartar__container,\n      children: [_jsxs(View, {\n        style: styles.avartar__body,\n        children: [status === 1 && _jsx(AccountScreen, {}), status === 2 && _jsx(MessageScreen, {})]\n      }), _jsxs(View, {\n        style: styles.avartar__navbar,\n        children: [status === 1 ? _jsxs(Pressable, {\n          style: styles[\"avartar__navbar-item\"],\n          onPress: function onPress() {\n            setStatus(1);\n          },\n          children: [_jsx(FontAwesomeIcon, {\n            icon: faCircleUser,\n            size: 25,\n            color: \"#58BC6B\"\n          }), _jsx(Text, {\n            style: styles[\"avartar__navbar-txt--active\"],\n            children: \"T\\xE0i kho\\u1EA3n\"\n          })]\n        }) : _jsxs(Pressable, {\n          style: styles[\"avartar__navbar-item\"],\n          onPress: function onPress() {\n            setStatus(1);\n          },\n          children: [_jsx(FontAwesomeIcon, {\n            icon: faCircleUser,\n            size: 25,\n            color: \"#000\"\n          }), _jsx(Text, {\n            style: styles[\"avartar__navbar-txt\"],\n            children: \"T\\xE0i kho\\u1EA3n\"\n          })]\n        }), status === 2 ? _jsxs(Pressable, {\n          style: styles[\"avartar__navbar-item\"],\n          onPress: function onPress() {\n            setStatus(2);\n          },\n          children: [_jsx(FontAwesomeIcon, {\n            icon: faMessage,\n            size: 25,\n            color: \"#58BC6B\"\n          }), _jsx(Text, {\n            style: styles[\"avartar__navbar-txt--active\"],\n            children: \"Tin nh\\u1EAFn\"\n          })]\n        }) : _jsxs(Pressable, {\n          style: styles[\"avartar__navbar-item\"],\n          onPress: function onPress() {\n            setStatus(2);\n          },\n          children: [_jsx(FontAwesomeIcon, {\n            icon: faMessage,\n            size: 25,\n            color: \"#000\"\n          }), _jsx(Text, {\n            style: styles[\"avartar__navbar-txt\"],\n            children: \"Tin nh\\u1EAFn\"\n          })]\n        })]\n      })]\n    });\n  }\n};\nexport default AvartarScreen;","map":{"version":3,"names":["React","useState","Text","View","Pressable","styles","useCustomFonts","faCircleUser","faMessage","FontAwesomeIcon","AccountScreen","MessageScreen","jsx","_jsx","jsxs","_jsxs","AvartarScreen","fontsLoaded","_useState","_useState2","_slicedToArray","status","setStatus","style","avartar__container","children","avartar__body","avartar__navbar","onPress","icon","size","color"],"sources":["/Users/huynhtanvinh/Documents/Ki3Nam3/Kiến trúc phần mềm/GrabPro/GrabPro/GrabProDriver/src/pages/AvartarScreen/AvartarScreen.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Text, View, Pressable } from \"react-native\";\nimport styles from \"./AvartarScreen.style\";\nimport { useCustomFonts } from \"../../styles/fonts\";\nimport { faCircleUser, faMessage } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-native-fontawesome\";\nimport AccountScreen from \"./components/AccountScreen/AccountScreen\";\nimport MessageScreen from \"./components/MessageScreen/MessageScreen\";\n\nconst AvartarScreen = () => {\n  const fontsLoaded = useCustomFonts();\n  const [status, setStatus] = useState(1);\n\n  if (!fontsLoaded) {\n    return null;\n  } else {\n    return (\n      <View style={styles.avartar__container}>\n        <View style={styles.avartar__body}>\n          {status === 1 && <AccountScreen />}\n          {status === 2 && <MessageScreen />}\n        </View>\n        <View style={styles.avartar__navbar}>\n          {status === 1 ? (\n            <Pressable\n              style={styles[\"avartar__navbar-item\"]}\n              onPress={() => {\n                setStatus(1);\n              }}\n            >\n              <FontAwesomeIcon icon={faCircleUser} size={25} color=\"#58BC6B\" />\n              <Text style={styles[\"avartar__navbar-txt--active\"]}>\n                Tài khoản\n              </Text>\n            </Pressable>\n          ) : (\n            <Pressable\n              style={styles[\"avartar__navbar-item\"]}\n              onPress={() => {\n                setStatus(1);\n              }}\n            >\n              <FontAwesomeIcon icon={faCircleUser} size={25} color=\"#000\" />\n              <Text style={styles[\"avartar__navbar-txt\"]}>Tài khoản</Text>\n            </Pressable>\n          )}\n\n          {status === 2 ? (\n            <Pressable\n              style={styles[\"avartar__navbar-item\"]}\n              onPress={() => {\n                setStatus(2);\n              }}\n            >\n              <FontAwesomeIcon icon={faMessage} size={25} color=\"#58BC6B\" />\n              <Text style={styles[\"avartar__navbar-txt--active\"]}>\n                Tin nhắn\n              </Text>\n            </Pressable>\n          ) : (\n            <Pressable\n              style={styles[\"avartar__navbar-item\"]}\n              onPress={() => {\n                setStatus(2);\n              }}\n            >\n              <FontAwesomeIcon icon={faMessage} size={25} color=\"#000\" />\n              <Text style={styles[\"avartar__navbar-txt\"]}>Tin nhắn</Text>\n            </Pressable>\n          )}\n        </View>\n      </View>\n    );\n  }\n};\n\nexport default AvartarScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}